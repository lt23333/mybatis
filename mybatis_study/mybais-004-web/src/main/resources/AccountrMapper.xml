<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.powernode.bank.dao.AccountDao">


<!--  专门定义一个结果映射，在这个结果映射当中指定数据库的字段名和JAVA类的属性名的对应关系-->
<!--  type属性用来指定POJO类的类名 id属性用来指定resultType的唯一标识。这个id将来要在select标签中使用-->
  <resultMap id="carTrsultMap" type="Account">
<!--  如果数据库表中有主键，建议这里配置id标签，注意：这不是必须的，配置的话可以提高效率-->
<!--    property后面填写POJO类的属性名-->
    <id property="id" column="id"></id>
<!--    column后面填写数据库表的字段名 如果成员变量和字段名一样 可以不配-->
    <result property="" column=""></result>
    <result property="" column=""></result>
    <result property="" column=""></result>
  </resultMap>

    <select id="select" resultType="Account">
     select * from t_act
    <!--
     1.if标签中的test是必要的
     2.if标签中tset属性的值是fasle或者true
     3.如果test是true，则if表情红的sql语句就会拼接，反之，则不会拼接，
     4.test属性中可以使用的是：
        当使用@Param注解，那么tst中要出现的是@Pararm注解指定的参数名，@Pararm（"brand"）-brand
        当没有使用@Param注解，那么test中要出现的是，Pararm1，pararm2，agr0，agr1
     5.再mybatis的动态SQL当中，不能使用&&，只能使用and
     *如果后面条件都不成立，会出现语法错误，后面没条件了啊？？？加个1=1 或者2=2恒成立的条件
     -->
    <where>
        <if test="brand!=null and brand!=''">
            and  brand like "%"#{brand}"%"
        </if>
        <if test="">
            and
        </if>
    </where>

    </select>

  <select id="" resultMap="carTrsultMap">


  </select>

  <select id="seletByActno" resultType="Account">
    select * from t_act where actno=#{actno}
  </select>
   
    <update id="UpdateByActno">
      update t_act set balance = #{balance} where actno=#[actno]
    </update>


    
</mapper>
